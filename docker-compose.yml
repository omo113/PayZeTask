version: '3'

services:
  payze.payment.api:
    image: ${DOCKER_REGISTRY-}payzepaymentapi
    build:
      context: .
      dockerfile: PayZe.Payment.Api/Dockerfile    
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - settings__RabbitMqHost=payze-rabbitmq
      - settings__RabbitMqUser=admin
      - settings__RabbitMqPassword=admin
      - settings__DatabaseConnection=Host=payment-db;Database=payze-payment;Username=admin;Password=admin;Pooling=true;
      - settings__RedisConnectionString=payze-redis:6379
      - settings__IdentityUrl=payze.identity.api
      - ASPNETCORE_HTTP_PORTS=7005
    networks:
      - backend
    depends_on:
      - payze-rabbitmq
      - payment-db    
    ports:
      - 8082:8080
    expose:
      - 8082
      - 8083
  payze.orders.api:
    image: ${DOCKER_REGISTRY-}payzeordersapi
    build:
      context: .
      dockerfile: PayZe.Orders.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - settings__RabbitMqHost=payze-rabbitmq
      - settings__RabbitMqUser=admin
      - settings__RabbitMqPassword=admin
      - settings__DatabaseConnection=Host=orders-db;Database=payze-orders;Username=admin;Password=admin;Pooling=true;
      - settings__RedisConnectionString=payze-redis:6379
      - settings__IdentityUrl=payze.identity.api
    networks:
      - backend
    depends_on:
      - payze-rabbitmq
      - orders-db
    ports:
      - 8084:8080
    expose:
      - 8084
      - 8085 
  payze.identity.api:
    image: ${DOCKER_REGISTRY-}payzeidentityapi
    build:
      context: .
      dockerfile: PayZE.Company.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - settings__RabbitMqHost=payze-rabbitmq
      - settings__RabbitMqUser=admin
      - settings__RabbitMqPassword=admin
      - settings__DatabaseConnection=Host=identity-db;Database=payze-identity;Username=admin;Password=admin;Pooling=true;
      - settings__RedisConnectionString=payze-redis:6379
    ports:
      - 8080:8080
    depends_on:
      - payze-rabbitmq
      - identity-db
    networks:
      - backend
    expose:
      - 8080
      - 8081 
  identity-db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=payze-identity
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - '5432:5432'
    volumes:
      - identity_db_data:/var/lib/postgresql/data
    networks:
      - backend

  orders-db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5441:5432'
    volumes:
      - orders_db_data:/var/lib/postgresql/data
    networks:
      - backend

  payment-db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5433:5432'
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    networks:
      - backend

  payze-rabbitmq:
    container_name: payze-rabbitmq
    image: docker.io/bitnami/rabbitmq:3.10
    ports:
      - '4369:4369'
      - '5551:5551'
      - '5552:5552'
      - '5672:5672'
      - '25672:25672'
      - '15672:15672'
    environment:
      - RABBITMQ_SECURE_PASSWORD=yes
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=admin
      - RABBITMQ_LOGS=-
    volumes:
      - rabbitmq_data:/bitnami/rabbitmq/mnesia
    networks:
      - backend

  payze-redis:
    container_name: payze-redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - backend

volumes:
  identity_db_data:
  orders_db_data:
  payment_db_data:
  rabbitmq_data:
  redis_data:

networks:
  backend:
